/*
 * 
 */
package edu.cw.cbr.model.domain;

// Generated 27.04.2013 1:42:58 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * StateUtil generated by hbm2java
 */
@Entity
@Table(name = "state", schema = "public")
public class State extends Arrayable{

	private int stateId;
	private float cpuIdlingTime;
	private float amountOfFreeMemory;
	private float batteryCharge;
	private float downloadSpeed;
	private float uploadSpeed;

	public State() {
	}

	/**
	 * Creates new instance of  {@code State}.
	 *
	 * @param cpuIdlingTime - idling time of CPU(%).
	 * @param freeMemory - amount of free memory (GB).
	 * @param batteryCharge - battery charge(mAh).
	 * @param downloadSpeed - downloading speed(GT/s).
	 * @param uploadSpeed - uploading speed(GT/s).
	 * @throws IllegalArgumentException if cpuIdlingTime is less than 0 or more
	 * than 100, freeMemory or batteryCharge,  or downloadSpeed, or uploadSpeed
	 * is less than 0.
	 */
	public State(float cpuIdlingTime, float freeMemory,
			float batteryCharge, float downloadSpeed, float uploadSpeed)
					throws IllegalArgumentException {
		if((cpuIdlingTime < 0 || cpuIdlingTime > 100)|| freeMemory < 0
				|| batteryCharge < 0 || downloadSpeed < 0 || uploadSpeed < 0)
			throw new IllegalArgumentException();
		this.setAmountOfFreeMemory(freeMemory);
		this.setBatteryCharge(batteryCharge);
		this.setCpuIdlingTime(cpuIdlingTime);
		this.setDownloadSpeed(downloadSpeed);
		this.setUploadSpeed(uploadSpeed);
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "state_id", unique = true, nullable = false)
	public int getStateId() {
		return this.stateId;
	}

	public void setStateId(int stateId) {
		this.stateId = stateId;
	}

	@Column(name = "cpu_idling_time", nullable = false, precision = 8, scale = 8)
	public float getCpuIdlingTime() {
		return this.cpuIdlingTime;
	}

	public void setCpuIdlingTime(float cpuIdlingTime) {
		this.cpuIdlingTime = cpuIdlingTime;
	}

	@Column(name = "amount_of_free_memory", nullable = false, precision = 8, scale = 8)
	public float getAmountOfFreeMemory() {
		return this.amountOfFreeMemory;
	}

	public void setAmountOfFreeMemory(float amountOfFreeMemory) {
		this.amountOfFreeMemory = amountOfFreeMemory;
	}

	@Column(name = "battery_charge", nullable = false, precision = 8, scale = 8)
	public float getBatteryCharge() {
		return this.batteryCharge;
	}

	public void setBatteryCharge(float batteryCharge) {
		this.batteryCharge = batteryCharge;
	}

	@Column(name = "download_speed", nullable = false, precision = 8, scale = 8)
	public float getDownloadSpeed() {
		return this.downloadSpeed;
	}

	public void setDownloadSpeed(float downloadSpeed) {
		this.downloadSpeed = downloadSpeed;
	}

	@Column(name = "upload_speed", nullable = false, precision = 8, scale = 8)
	public float getUploadSpeed() {
		return this.uploadSpeed;
	}

	public void setUploadSpeed(float uploadSpeed) {
		this.uploadSpeed = uploadSpeed;
	}

	@Override
	protected List<Object> toList() {
		List<Object> instLData = new ArrayList<Object>();
		instLData.add(this.getStateId());
		instLData.add(this.getCpuIdlingTime());
		instLData.add(this.getAmountOfFreeMemory());
		instLData.add(this.getBatteryCharge());
		instLData.add(this.getDownloadSpeed());
		instLData.add(this.getUploadSpeed());
		return instLData;
	}

}
