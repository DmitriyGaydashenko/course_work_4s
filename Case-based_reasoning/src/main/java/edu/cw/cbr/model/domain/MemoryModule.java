package edu.cw.cbr.model.domain;

// Generated 27.04.2013 1:42:58 by Hibernate Tools 4.0.0

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * MemoryModule generated by hbm2java
 */
@Entity
@Table(name = "memorymodule", schema = "public")
public class MemoryModule extends HardwareComponent{

	public final static int HARDWARE_TYPE = 3;
	private float transferRate;
	private float amountOfMemory;

	public MemoryModule() {
		
	}
	/**
	 * Creates new instance of  {@code MemoryModule}.
	 *
	 * @param hcFamilyId the hardware component family's id.
	 * @param hcName the hardware component's name.
	 * @param amountOfMemory - memory module capacity(GB).
	 * @param transferRate -  maximum memory module's transfer rate (MB/s).
	 * @throws IllegalArgumentException if amountOfMemory or transferRate is 
	 * less than 0. 
	 */
	public MemoryModule(int hcFamilyId, String hcName, 
			float amountOfMemory, float transferRate) 
					throws IllegalArgumentException{
		super(hcFamilyId, hcName);
		if(amountOfMemory < 0 || transferRate < 0)
			throw new IllegalArgumentException();
		this.setAmountOfMemory(amountOfMemory);
		this.setTransferRate(transferRate);
	}
	
	@Column(name = "transfer_rate", nullable = false, precision = 8, scale = 8)
	public float getTransferRate() {
		return this.transferRate;
	}

	public void setTransferRate(float transferRate) {
		this.transferRate = transferRate;
	}

	@Column(name = "amount_of_memory", nullable = false, precision = 8, scale = 8)
	public float getAmountOfMemory() {
		return this.amountOfMemory;
	}

	public void setAmountOfMemory(float amountOfMemory) {
		this.amountOfMemory = amountOfMemory;
	}
	
	@Override
	public List<Object> toList() {
		List<Object> instDataList = super.toList();
		instDataList.add(this.getAmountOfMemory());
		instDataList.add(this.getTransferRate());
		return instDataList;
	}

}
