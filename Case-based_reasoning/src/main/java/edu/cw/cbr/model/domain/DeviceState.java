package edu.cw.cbr.model.domain;

// Generated 27.04.2013 1:42:58 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * DeviceState generated by hbm2java
 */
@Entity
@Table(name = "devicestate", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"state_id", "device_id" }))
public class DeviceState extends ArrayAble{

	private int deviceStateId;
	private State state;
	private DeviceHardwareComponentData deviceData;
	public DeviceState() {
	}

	public DeviceState(State state, DeviceHardwareComponentData deviceData) {
		this.state = state;
		this.deviceData = deviceData;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "device_state_id", unique = true, nullable = false)
	public int getDeviceStateId() {
		return this.deviceStateId;
	}

	public void setDeviceStateId(int deviceStateId) {
		this.deviceStateId = deviceStateId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "state_id", nullable = false)
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "device_id", nullable = false)
	public DeviceHardwareComponentData getDeviceData() {
		return deviceData;
	}

	public void setDeviceData(DeviceHardwareComponentData deviceData) {
		this.deviceData = deviceData;
	}

	@Override
	public List<Object> toList() {
		List<Object> lData = new ArrayList<Object>();
		lData.add(this.getDeviceStateId());
		lData.add(deviceData.getDeviceId());
		lData.add(state.getStateId());
		lData.add(deviceData.getDeveloper().getDeveloperName());
		lData.add(deviceData.getDeviceName());
		lData.add(deviceData.getCoresNum());
		lData.add(deviceData.getCacheSize());
		lData.add(deviceData.getClockSpeed());
		lData.add(deviceData.getTransferOnMemory());
		lData.add(state.getCpuIdlingTime());
		lData.add(state.getAmountOfFreeMemory());
		lData.add(state.getAmountOfFreeMemory()/deviceData.getAmountOfMemory()*100);
		lData.add(state.getDownloadSpeed());
		lData.add(state.getDownloadSpeed()/deviceData.getNetworkMaxSpeed()*100);
		lData.add(state.getUploadSpeed());
		lData.add(state.getUploadSpeed()/deviceData.getNetworkMaxSpeed()*100);
		lData.add(state.getBatteryCharge());
		lData.add(state.getBatteryCharge()/deviceData.getBatteryCapacity()*100);
		return lData;
	}

}
